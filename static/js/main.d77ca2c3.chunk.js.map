{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ROW1","id","key","src","ROW2","ROW3","Pad","props","className","onClick","letter","source","Board","row","pad","this","renderPad","React","Component","App","p","btn","document","querySelectorAll","i","innerText","toUpperCase","querySelector","innerHTML","upperKey","SOUND","getElementById","play","window","addEventListener","keyPress","updateDisplay","handleClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2PAIMA,G,MAAO,CACX,CACEC,GAAI,SACJC,IAAK,IACLC,IACE,gGAEJ,CACEF,GAAI,WACJC,IAAK,IACLC,IAAK,0DAEP,CACEF,GAAI,gBACJC,IAAK,IACLC,IACE,uGAGAC,EAAO,CACX,CACEH,GAAI,iBACJC,IAAK,IACLC,IAAK,0CAEP,CACEF,GAAI,uBACJC,IAAK,IACLC,IAAK,kEAEP,CACEF,GAAI,YACJC,IAAK,IACLC,IACE,kFAGAE,EAAO,CACX,CACEJ,GAAI,YACJC,IAAK,IACLC,IAAK,yDAEP,CACEF,GAAI,mBACJC,IAAK,IACLC,IAAK,yDAEP,CACEF,GAAI,sBACJC,IAAK,IACLC,IACE,kGAIN,SAASG,EAAIC,GACX,OACE,yBAAQC,UAAU,WAAWP,GAAIM,EAAMN,GAAIQ,QAASF,EAAME,QAA1D,UACGF,EAAMG,OACP,uBAAOF,UAAU,OAAOP,GAAIM,EAAMG,OAAQP,IAAKI,EAAMI,Y,IAKrDC,E,wKACMC,EAAKC,GAAM,IAAD,OAClB,OACE,cAACR,EAAD,CACEL,GAAIY,EAAIC,GAAKb,GACbS,OAAQG,EAAIC,GAAKZ,IACjBS,OAAQE,EAAIC,GAAKX,IACjBM,QAAS,kBAAM,EAAKF,MAAME,QAAQI,EAAIC,S,+BAK1C,OACE,sBAAKN,UAAU,WAAf,UACE,qBAAKA,UAAU,aACdO,KAAKC,UAAUhB,EAAM,GACrBe,KAAKC,UAAUhB,EAAM,GACrBe,KAAKC,UAAUhB,EAAM,GACtB,sBAAKQ,UAAU,YAAf,UACGO,KAAKC,UAAUZ,EAAM,GACrBW,KAAKC,UAAUZ,EAAM,GACrBW,KAAKC,UAAUZ,EAAM,MAExB,sBAAKI,UAAU,WAAf,UACGO,KAAKC,UAAUX,EAAM,GACrBU,KAAKC,UAAUX,EAAM,GACrBU,KAAKC,UAAUX,EAAM,a,GA1BZY,IAAMC,WAyFXC,E,4KAvDCC,GACZ,IAAMC,EAAMC,SAASC,iBAAiB,UACtC,IAAK,IAAIC,KAAKH,EAAK,CACjB,GAAIA,EAAIG,GAAGC,YAAcL,EAAElB,IAAIwB,cACnBJ,SAASK,cAAc,YAC7BC,UAAYP,EAAIG,GAAGvB,M,+BAKpBmB,GACP,IAAMS,EAAWT,EAAElB,IAAIwB,cACjBI,EAAQR,SAASS,eAAeF,GACtC,OAAQA,GACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACHC,EAAME,U,kCAOAZ,GACIE,SAASS,eAAeX,EAAElB,KAClC8B,S,0CAINC,OAAOC,iBAAiB,UAAWnB,KAAKoB,UACxCF,OAAOC,iBAAiB,UAAWnB,KAAKqB,iB,+BAEhC,IAAD,OACP,OACE,sBAAKnC,GAAG,eAAR,UAEE,cAAC,EAAD,CACEQ,QAAS,SAACW,GACR,EAAKiB,YAAYjB,GACjB,EAAKgB,cAAchB,MAGvB,qBAAKnB,GAAG,mB,GAlDEgB,IAAMC,WC1FToB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3B,SAASS,eAAe,SAM1BO,M","file":"static/js/main.d77ca2c3.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\n//import ReactFCCtest from \"react-fcctest\";\n\nconst ROW1 = [\n  {\n    id: \"hi-hat\",\n    key: \"Q\",\n    src:\n      \"http://dight310.byu.edu/media/audio/FreeLoops.com/4/4/HiHat%2003.wav-9237-Free-Loops.com.mp3\",\n  },\n  {\n    id: \"high-hat\",\n    key: \"W\",\n    src: \"http://www.denhaku.com/r_box/sr16/sr16hat/tighthat.wav\",\n  },\n  {\n    id: \"hi-hat closed\",\n    key: \"E\",\n    src:\n      \"http://dight310.byu.edu/media/audio/FreeLoops.com/1/1/909%20Hi%20Hat%2005-5835-Free-Loops.com.mp3\",\n  },\n];\nconst ROW2 = [\n  {\n    id: \"drum hit, roll\",\n    key: \"A\",\n    src: \"http://www.innisdale.ca/ICS3U/drum.mp3\",\n  },\n  {\n    id: \"snare drum - rimshot\",\n    key: \"S\",\n    src: \"http://www.randomthink.net/labs/html5drums/drumkit/Rimshot.wav\",\n  },\n  {\n    id: \"drum fill\",\n    key: \"D\",\n    src:\n      \"http://cd.textfiles.com/cdaction/cdaction47b/BEAT2000/SOUNDS/SFX/DRUMRLL3.WAV\",\n  },\n];\nconst ROW3 = [\n  {\n    id: \"bass drum\",\n    key: \"Z\",\n    src: \"http://www.denhaku.com/r_box/sr16/sr16bd/lodblhrm.wav\",\n  },\n  {\n    id: \"synth: bass drum\",\n    key: \"X\",\n    src: \"http://www.denhaku.com/r_box/sr16/sr16bd/roomkik1.wav\",\n  },\n  {\n    id: \"drum kick, sub-bass\",\n    key: \"C\",\n    src:\n      \"http://dight310.byu.edu/media/audio/FreeLoops.com/3/3/Drum%20Kick%208-9192-Free-Loops.com.mp3\",\n  },\n];\n\nfunction Pad(props) {\n  return (\n    <button className=\"drum-pad\" id={props.id} onClick={props.onClick}>\n      {props.letter}\n      <audio className=\"clip\" id={props.letter} src={props.source}></audio>\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderPad(row, pad) {\n    return (\n      <Pad\n        id={row[pad].id}\n        letter={row[pad].key}\n        source={row[pad].src}\n        onClick={() => this.props.onClick(row[pad])}\n      />\n    );\n  }\n  render() {\n    return (\n      <div className=\"drumPads\">\n        <div className=\"firstRow\"></div>\n        {this.renderPad(ROW1, 0)}\n        {this.renderPad(ROW1, 1)}\n        {this.renderPad(ROW1, 2)}\n        <div className=\"secondRow\">\n          {this.renderPad(ROW2, 0)}\n          {this.renderPad(ROW2, 1)}\n          {this.renderPad(ROW2, 2)}\n        </div>\n        <div className=\"thirdRow\">\n          {this.renderPad(ROW3, 0)}\n          {this.renderPad(ROW3, 1)}\n          {this.renderPad(ROW3, 2)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  updateDisplay(p) {\n    const btn = document.querySelectorAll(\"button\");\n    for (let i in btn) {\n      if (btn[i].innerText === p.key.toUpperCase()) {\n        let dis = document.querySelector(\"#display\");\n        dis.innerHTML = btn[i].id;\n      }\n    }\n  }\n\n  keyPress(p) {\n    const upperKey = p.key.toUpperCase();\n    const SOUND = document.getElementById(upperKey);\n    switch (upperKey) {\n      case \"Q\":\n      case \"W\":\n      case \"E\":\n      case \"A\":\n      case \"S\":\n      case \"D\":\n      case \"Z\":\n      case \"X\":\n      case \"C\":\n        SOUND.play();\n        break;\n      default:\n        break;\n    }\n  }\n\n  handleClick(p) {\n    const SOUND = document.getElementById(p.key);\n    SOUND.play();\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.keyPress);\n    window.addEventListener(\"keydown\", this.updateDisplay);\n  }\n  render() {\n    return (\n      <div id=\"drum-machine\">\n        {/*<ReactFCCtest />*/}\n        <Board\n          onClick={(p) => {\n            this.handleClick(p);\n            this.updateDisplay(p);\n          }}\n        />\n        <div id=\"display\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}